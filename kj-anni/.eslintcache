[{"/workspace/KandJ/kj-anni/src/reportWebVitals.js":"1","/workspace/KandJ/kj-anni/src/App.js":"2","/workspace/KandJ/kj-anni/src/Countdown.js":"3","/workspace/KandJ/kj-anni/src/index.js":"4"},{"size":362,"mtime":1608065794762,"results":"5","hashOfConfig":"6"},{"size":322,"mtime":1608070700509,"results":"7","hashOfConfig":"6"},{"size":4820,"mtime":1608070660725,"results":"8","hashOfConfig":"6"},{"size":502,"mtime":1608071282111,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1bqqids",{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/workspace/KandJ/kj-anni/src/reportWebVitals.js",[],"/workspace/KandJ/kj-anni/src/App.js",[],"/workspace/KandJ/kj-anni/src/Countdown.js",["19","20","21","22","23","24","25","26","27"],"import React from 'react';\r\nimport moment from 'moment';\r\nimport './Countdown.css';\r\nimport heart from './images/heart.png';\r\n\r\nclass Countdown extends React.Component {\r\n    state = {\r\n        hours: undefined,\r\n        minutes: undefined,\r\n        seconds: undefined,\r\n        display: null,\r\n        done: false\r\n    };\r\n    \r\n    componentDidMount() {\r\n        this.interval = setInterval(() => {\r\n            const { timeTillDate, timeFormat } = this.props;\r\n            const then = moment(timeTillDate, timeFormat);\r\n            const now = moment();\r\n            const countdown = moment(then - now);\r\n            const hours = countdown.format('HH');\r\n            const minutes = countdown.format('mm');\r\n            const seconds = countdown.format('ss');\r\n\r\n            this.setState({ hours, minutes, seconds });\r\n        }, 1000);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        \r\n        if (this.state.done) {\r\n            clearInterval(this.interval);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { hours, minutes, seconds } = this.state;\r\n\r\n        // Mapping the date values to radius values\r\n        \r\n        const hoursRadius = mapNumber(hours, 24, 0, 0, 360);\r\n        const minutesRadius = mapNumber(minutes, 60, 0, 0, 360);\r\n        const secondsRadius = mapNumber(seconds, 60, 0, 0, 360);\r\n\r\n        if (!seconds) {\r\n            return null;\r\n        }\r\n        if(seconds ==0 && minutes == 0 && hours == 0 || this.state.done == true){\r\n            this.state.done = true;\r\n            this.state.display = (\r\n                <div>\r\n                    <h1>Happy Anniversary!</h1>\r\n                <p>Love you very much! I know its not much but I hope this was kinda cool. Can't wait to see you friday!</p>\r\n                </div>\r\n            )\r\n        }\r\n        else{\r\n            console.log(this.state.done);\r\n            this.state.display = (\r\n                <div>\r\n                <div className=\"title\">\r\n                <h1>Kyle and Jayda</h1>\r\n                <h2>2 Year Countdown</h2>\r\n                </div>\r\n                <div className=\"countdown-wrapper\">\r\n                    {hours && (\r\n                        <div className=\"countdown-item\">\r\n                            <SVGCircle radius={hoursRadius} />\r\n                            {hours}\r\n                            <span>hours</span>\r\n                        </div>\r\n                    )}\r\n                    {minutes && (\r\n                        <div className=\"countdown-item\">\r\n                            <SVGCircle radius={minutesRadius} />\r\n                            {minutes}\r\n                            <span>minutes</span>\r\n                        </div>\r\n                    )}\r\n                    {seconds && (\r\n                        <div className=\"countdown-item\">\r\n                            <SVGCircle radius={secondsRadius} />\r\n                            {seconds}\r\n                            <span>seconds</span>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                \r\n                </div>\r\n            \r\n            )\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"hearts\"><img className=\"pic\" alt=\"heart\" src={heart}></img></div>\r\n                \r\n            {this.state.display}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst SVGCircle = ({ radius }) => (\r\n    <svg className=\"countdown-svg\">\r\n        <path\r\n            fill=\"none\"\r\n            stroke=\"#333\"\r\n            stroke-width=\"4\"\r\n            d={describeArc(50, 50, 48, 0, radius)}\r\n        />\r\n    </svg>\r\n);\r\n\r\n// From StackOverflow: https://stackoverflow.com/questions/5736398/how-to-calculate-the-svg-path-for-an-arc-of-a-circle\r\nfunction polarToCartesian(centerX, centerY, radius, angleInDegrees) {\r\n    var angleInRadians = ((angleInDegrees - 90) * Math.PI) / 180.0;\r\n\r\n    return {\r\n        x: centerX + radius * Math.cos(angleInRadians),\r\n        y: centerY + radius * Math.sin(angleInRadians)\r\n    };\r\n}\r\n\r\nfunction describeArc(x, y, radius, startAngle, endAngle) {\r\n    var start = polarToCartesian(x, y, radius, endAngle);\r\n    var end = polarToCartesian(x, y, radius, startAngle);\r\n\r\n    var largeArcFlag = endAngle - startAngle <= 180 ? '0' : '1';\r\n\r\n    var d = [\r\n        'M',\r\n        start.x,\r\n        start.y,\r\n        'A',\r\n        radius,\r\n        radius,\r\n        0,\r\n        largeArcFlag,\r\n        0,\r\n        end.x,\r\n        end.y\r\n    ].join(' ');\r\n\r\n    return d;\r\n}\r\n\r\n// From StackOverflow: https://stackoverflow.com/questions/10756313/javascript-jquery-map-a-range-of-numbers-to-another-range-of-numbers\r\nfunction mapNumber(number, in_min, in_max, out_min, out_max) {\r\n    return (\r\n        ((number - in_min) * (out_max - out_min)) / (in_max - in_min) + out_min\r\n    );\r\n}\r\nexport default Countdown;","/workspace/KandJ/kj-anni/src/index.js",[],{"ruleId":"28","severity":1,"message":"29","line":48,"column":20,"nodeType":"30","messageId":"31","endLine":48,"endColumn":22},{"ruleId":"28","severity":1,"message":"29","line":48,"column":35,"nodeType":"30","messageId":"31","endLine":48,"endColumn":37},{"ruleId":"32","severity":1,"message":"33","line":48,"column":40,"nodeType":"34","messageId":"35","endLine":48,"endColumn":42},{"ruleId":"28","severity":1,"message":"29","line":48,"column":49,"nodeType":"30","messageId":"31","endLine":48,"endColumn":51},{"ruleId":"32","severity":1,"message":"33","line":48,"column":54,"nodeType":"34","messageId":"35","endLine":48,"endColumn":56},{"ruleId":"28","severity":1,"message":"29","line":48,"column":73,"nodeType":"30","messageId":"31","endLine":48,"endColumn":75},{"ruleId":"36","severity":1,"message":"37","line":49,"column":13,"nodeType":"38","endLine":49,"endColumn":23},{"ruleId":"36","severity":1,"message":"37","line":50,"column":13,"nodeType":"38","endLine":50,"endColumn":23},{"ruleId":"36","severity":1,"message":"37","line":59,"column":13,"nodeType":"38","endLine":59,"endColumn":23},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression"]